{"ast":null,"code":"var _jsxFileName = \"/Users/limingw/Code/React-study/hello-react/src/Components/Header/index.jsx\";\nimport React, { Component } from \"react\";\nimport \"./index.css\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class index extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleKeyup = event => {\n      //解构,赋值获取keyCode, target\n      const {\n        keyCode,\n        target\n      } = event; //判断是否是回车案件\n\n      if (keyCode !== 13) return; //添加的名字不能为空\n\n      if (target.value.trim() === \"\") {\n        alert(\"input cannot empty\");\n        return;\n      } //准备好一个todo对象\n\n\n      const todoObj = {\n        id: nanoid(),\n        name: target.value,\n        done: false\n      }; //将todoObj传给App\n\n      this.props.addTodo(todoObj); //清空输入\n\n      target.value = \"\";\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-header\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        onKeyDown: this.handleKeyup,\n        type: \"text\",\n        placeholder: \"please enter your task name and press enter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/limingw/Code/React-study/hello-react/src/Components/Header/index.jsx"],"names":["React","Component","nanoid","index","handleKeyup","event","keyCode","target","value","trim","alert","todoObj","id","name","done","props","addTodo","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;AACA,SAASC,MAAT,QAAuB,QAAvB;;AACA,eAAe,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAAA;AAAA;;AAAA,SAC3CG,WAD2C,GAC5BC,KAAD,IAAW;AACvB;AACA,YAAM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,UAAsBF,KAA5B,CAFuB,CAGvB;;AACA,UAAIC,OAAO,KAAK,EAAhB,EAAoB,OAJG,CAKvB;;AACA,UAAIC,MAAM,CAACC,KAAP,CAAaC,IAAb,OAAwB,EAA5B,EAAgC;AAC9BC,QAAAA,KAAK,CAAC,oBAAD,CAAL;AACA;AACD,OATsB,CAUvB;;;AACA,YAAMC,OAAO,GAAG;AAAEC,QAAAA,EAAE,EAAEV,MAAM,EAAZ;AAAgBW,QAAAA,IAAI,EAAEN,MAAM,CAACC,KAA7B;AAAoCM,QAAAA,IAAI,EAAE;AAA1C,OAAhB,CAXuB,CAYvB;;AACA,WAAKC,KAAL,CAAWC,OAAX,CAAmBL,OAAnB,EAbuB,CAcvB;;AACAJ,MAAAA,MAAM,CAACC,KAAP,GAAe,EAAf;AACD,KAjB0C;AAAA;;AAmB3CS,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACE;AACE,QAAA,SAAS,EAAE,KAAKb,WADlB;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,WAAW,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AA7B0C","sourcesContent":["import React, { Component } from \"react\";\nimport \"./index.css\";\nimport { nanoid } from \"nanoid\";\nexport default class index extends Component {\n  handleKeyup = (event) => {\n    //解构,赋值获取keyCode, target\n    const { keyCode, target } = event;\n    //判断是否是回车案件\n    if (keyCode !== 13) return;\n    //添加的名字不能为空\n    if (target.value.trim() === \"\") {\n      alert(\"input cannot empty\");\n      return;\n    }\n    //准备好一个todo对象\n    const todoObj = { id: nanoid(), name: target.value, done: false };\n    //将todoObj传给App\n    this.props.addTodo(todoObj);\n    //清空输入\n    target.value = \"\";\n  };\n\n  render() {\n    return (\n      <div className=\"todo-header\">\n        <input\n          onKeyDown={this.handleKeyup}\n          type=\"text\"\n          placeholder=\"please enter your task name and press enter\"\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}